sample.interval=20000
"lazyLoadDBfetch" "spsurml" 
"lazyLoadDBfetch" "spsurml" 
"lazyLoadDBfetch" "spsurml" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "spsurml" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "spsurml" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "spsurml" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "spsurml" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "spsurml" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "spsurml" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "spsurml" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "spsurml" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "spsurml" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "spsurml" 
"asMethod" "as" "as.matrix.Matrix" "as.matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"matrix" "spsurml" 
"spsurml" 
"is.na" "isN0" "sparseDefault" "Matrix::Matrix" "spsurml" 
"isN0" "sparseDefault" "Matrix::Matrix" "spsurml" 
"isN0" "sparseDefault" "Matrix::Matrix" "spsurml" 
"isN0" "sparseDefault" "Matrix::Matrix" "spsurml" 
"isN0" "sparseDefault" "Matrix::Matrix" "spsurml" 
"isN0" "sparseDefault" "Matrix::Matrix" "spsurml" 
"isN0" "sparseDefault" "Matrix::Matrix" "spsurml" 
"isN0" "sparseDefault" "Matrix::Matrix" "spsurml" 
"isN0" "sparseDefault" "Matrix::Matrix" "spsurml" 
"isN0" "sparseDefault" "Matrix::Matrix" "spsurml" 
"isN0" "sparseDefault" "Matrix::Matrix" "spsurml" 
"isN0" "sparseDefault" "Matrix::Matrix" "spsurml" 
".row" "lower.tri" "all0" "isTriangular" "isTriangular" "Matrix::Matrix" "spsurml" 
".row" "lower.tri" "all0" "isTriangular" "isTriangular" "Matrix::Matrix" "spsurml" 
".col" "lower.tri" "all0" "isTriangular" "isTriangular" "Matrix::Matrix" "spsurml" 
".col" "lower.tri" "all0" "isTriangular" "isTriangular" "Matrix::Matrix" "spsurml" 
".col" "lower.tri" "all0" "isTriangular" "isTriangular" "Matrix::Matrix" "spsurml" 
"all0" "isTriangular" "isTriangular" "Matrix::Matrix" "spsurml" 
"all0" "isTriangular" "isTriangular" "Matrix::Matrix" "spsurml" 
".row" "upper.tri" "all0" "isTriangular" "isTriangular" "Matrix::Matrix" "spsurml" 
".row" "upper.tri" "all0" "isTriangular" "isTriangular" "Matrix::Matrix" "spsurml" 
".col" "upper.tri" "all0" "isTriangular" "isTriangular" "Matrix::Matrix" "spsurml" 
".col" "upper.tri" "all0" "isTriangular" "isTriangular" "Matrix::Matrix" "spsurml" 
".col" "upper.tri" "all0" "isTriangular" "isTriangular" "Matrix::Matrix" "spsurml" 
"upper.tri" "all0" "isTriangular" "isTriangular" "Matrix::Matrix" "spsurml" 
"all0" "isTriangular" "isTriangular" "Matrix::Matrix" "spsurml" 
"lazyLoadDBfetch" "spsurml" 
"[.data.frame" "[" "na.omit.data.frame" "na.omit" ".External2" "model.frame.default" "stats::model.frame" "eval" "eval" "spsurml" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "stopifnot" "c_formula" "paste_formula" "formula.Formula" "formula" "model.matrix.Formula" "model.matrix" "get_data_spsur" "spsurml" 
"unlist" ".bdiag" ".class1" "as" "Matrix::bdiag" "get_data_spsur" "spsurml" 
"lm.fit" "lm" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "is" "Matrix::Matrix" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
"as.function.default" "as.function" "body<-" "body<-" ".makeAsMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
"is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
"@<-" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
"Matrix::solve" "standardGeneric" "Matrix::solve" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"isN0" "sparseDefault" "Matrix" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"dimCheck" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"%nin%" "attrSlotNames" "lapply" "sapply" "attrSlots" "standardGeneric" "all.equal" "attr.all_Mat" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getGeneric" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"any" "int2i" "[<-" "[<-" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"tryCatch" "try" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"%*%" "%*%" "%*%" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"stopifnot" "nz.NA" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "extends" "as_CspClass" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".identC" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".identC" "is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"%*%" "as.vector" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"length" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"lapply" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"c" "paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"possibleExtends" "extends" "[<-" "[<-" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".requirePackage" ".classEnv" "as" "isTRUE" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".identC" "as" "as_CspClass" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"isTRUE" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"@<-" "[<-" "[<-" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".identC" ".nextMethod" "callNextMethod" ".local" "initialize" "initialize" "new" "asMethod" "as" "standardGeneric" "all.equal" "isTRUE" ".a.e.comb" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"prod" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"non0.i" "non0ind" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".identC" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".identC" "is" "extends" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" "asMethod" "as" "standardGeneric" "all.equal" "isTRUE" ".a.e.comb" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"character" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getOption" "Matrix.msg" "[<-" "[<-" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"%*%" "as.vector" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is.numeric" "is.numeric" "non0ind" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"@<-" "[<-" "[<-" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"tryCatch" "try" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"@<-" "*" "*" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "solve" "standardGeneric" "solve" "eval" "eval" "callGeneric" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fit" "spsurml" 
"%*%" "%*%" "%*%" "matrix" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
".class1" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".identC" "possibleExtends" "extends" "non0.i" "non0ind" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"*" "*" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getExportedValue" "::" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"match.call" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"tryCatch" "try" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"prettyNum" "format.default" "format" "paste" "all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "standardGeneric" "all.equal" "attr.all_Mat" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getNamespace" ".requirePackage" ".classEnv" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "mat2dgT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"Matrix::solve" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"..2dge" "as.numeric" "as.numeric" "as.numeric" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"parent.frame" "tryCatch" "try" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"dim" "dim" "dimCheck" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"non0.i" "non0ind" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"possibleExtends" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"match.call" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"as.name" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "is" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".identC" "is" "[<-" "[<-" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is.numeric" "is.numeric" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".findMethodInTable" ".quickCoerceSelect" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"all.equal.numeric" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".a.e.comb" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"c" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"sys.function" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".identC" "possibleExtends" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"possibleExtends" "extends" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "crossprod" "crossprod" ".local" "Matrix::crossprod" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".classEnv" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getNamespace" ".requirePackage" ".classEnv" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "mat2dgT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"@<-" "initialize" "initialize" "new" "Matrix" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"exists" ".getMethodsTable" "as" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"character" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "crossprod" "crossprod" ".local" "Matrix::crossprod" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getGeneric" "as" "as_CspClass" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "is" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"exists" ".getMethodsTable" "as" "isTRUE" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".identC" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "isTRUE" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"anyDuplicated.default" "anyDuplicated" "[<-" "[<-" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".quickCoerceSelect" "as" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"anyDuplicated.default" "anyDuplicated" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"crossprod" ".local" "Matrix::crossprod" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "stopifnot" "nz.NA" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"sys.call" "callGeneric" "sum" "sum" "sum" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".identC" "is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "mat2dgT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"slot<-" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"@<-" "initialize" "initialize" "new" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "is" "extends" "non0.i" "non0ind" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
":::" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "isTRUE" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "methods::kronecker" "kronecker" "fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "extends" "as_CspClass" "[<-" "[<-" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "is" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getGeneric" "getGeneric" "as" "isTRUE" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "mat2dgT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is.matrix" "is.matrix" ".M.shape" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"tryCatch" "try" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"non0.i" "non0ind" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".requirePackage" ".classEnv" ".Call" ".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" "extends" "non0.i" "non0ind" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".requirePackage" ".classEnv" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getGeneric" "as" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".class1" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"exists" ".getMethodsTable" "as" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"dim" "dim" "dimCheck" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "crossprod" "crossprod" ".local" "Matrix::crossprod" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getMethodsTable" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "crossprod" "crossprod" ".local" "Matrix::crossprod" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"isTriangular" "isTriangular" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"extends" "non0ind" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"%in%" ".getGeneric" "getGeneric" "as" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".nextMethod" "callNextMethod" ".local" "initialize" "initialize" "new" "asMethod" "as" "standardGeneric" "all.equal" "isTRUE" ".a.e.comb" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is.matrix" "is.matrix" ".M.kind" "paste0" ".identC" "as" "as_CspClass" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"packageSlot" ".classEnv" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".classEnv" ".Call" ".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"tryCatch" "try" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "isTRUE" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"sys.parent" "sys.call" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"%*%" "as.vector" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"%in%" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "getClass" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "stopifnot" "non0ind" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"methodsPackageMetaName" "classMetaName" "getClassDef" "is" ".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getGeneric" "getGeneric" "as" ".class1" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"dim" "dim" "dimCheck" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"possibleExtends" "extends" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"extends" "non0ind" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "crossprod" "crossprod" ".local" "Matrix::crossprod" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is.numeric" "is.numeric" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" "[<-" "[<-" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".classEnv" "%*%" "%*%" "%*%" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"sub" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"possibleExtends" "extends" "as_CspClass" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"possibleExtends" "extends" "asMethod" "as" "standardGeneric" "all.equal" "isTRUE" ".a.e.comb" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"%*%" "as.vector" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"isN0" "sparseDefault" "Matrix" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".identC" "possibleExtends" "extends" "as_CspClass" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is.matrix" "is.matrix" ".M.kind" "paste0" ".identC" "as" "as_CspClass" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"crossprod" ".local" "Matrix::crossprod" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"standardGeneric" "all.equal" "isTRUE" ".a.e.comb" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".class1" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" "callNextMethod" "initialize" "initialize" "new" "mat2dgT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".classEnv" ".Call" ".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".identC" "is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"sys.parent" "sys.function" "match.call" "stopifnot" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"methods:::loadMethod" "initialize" "new" "asMethod" "as" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "is" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "crossprod" "crossprod" ".local" "Matrix::crossprod" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"sys.parent" "sys.function" "match.call" "stopifnot" "non0ind" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"anyDuplicated" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"c" "extends" ".M.shape" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"<Anonymous>" "asMethod" "as" "asMethod" "as" "Matrix" "standardGeneric" "solve" "eval" "eval" "callGeneric" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fit" "spsurml" 
".requirePackage" ".classEnv" "as" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
"%*%" "%*%" "%*%" "matrix" "fn" "fn1" "minqa::bobyqa" "fit" "spsurml" 
"is" "extends" "as_CspClass" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"attr" "packageSlot" ".classEnv" ".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"exists" ".getMethodsTable" "as" "isTRUE" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"tryCatch" "try" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"%*%" "%*%" "%*%" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"paste0" ".getClassesFromCache" "getClassDef" "getClass" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" ".local" "initialize" "initialize" "new" "asMethod" "as" "standardGeneric" "all.equal" "isTRUE" ".a.e.comb" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"@<-" "[<-" "[<-" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"rev" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"c" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"class" ".class1" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "crossprod" "crossprod" ".local" "Matrix::crossprod" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"isNamespace" "asNamespace" "getExportedValue" "::" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"MatrixClass" ".sp.class" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "crossprod" "crossprod" ".local" "Matrix::crossprod" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"all.equal" "standardGeneric" "all.equal" "attr.all_Mat" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"c" "paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "isTRUE" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"c" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".findMethodInTable" ".quickCoerceSelect" "as" "isTRUE" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"possibleExtends" "extends" "non0.i" "non0ind" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"possibleExtends" "extends" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"class" ".identC" "is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" ".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"paste0" "dQuote" "paste0" "all.equal.list" "all.equal" "standardGeneric" "all.equal" "attr.all_Mat" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"c" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"%*%" "as.vector" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"parent.frame" "withCallingHandlers" "stopifnot" "nz.NA" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"[<-" "[<-" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getMethodsTable" "as" "as_CspClass" "[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"sum" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".M.kindC" ".M.kind" "asMethod" "as" "standardGeneric" "all.equal" "isTRUE" ".a.e.comb" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"sum" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getGeneric" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "crossprod" "crossprod" ".local" "Matrix::crossprod" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"paste0" ".getClassesFromCache" "getClassDef" "getClass" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"sys.call" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "is" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"all.equal" "standardGeneric" "all.equal" "isTRUE" ".a.e.comb" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"as.name" "callGeneric" "sum" "sum" "sum" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"get" ":::" "initialize" "new" "mat2dgT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "stopifnot" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"c" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "is" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"anyDuplicated" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".identC" "is" ".local" "diag" "standardGeneric" "diag" "mkDet" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"is.numeric" "is.numeric" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"*" "eval" "eval" "callGeneric" "*" "*" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "stopifnot" "nz.NA" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getClassDef" "is" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"dimNamesCheck" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"methods:::loadMethod" "initialize" "new" "mat2dgT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"c" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"[<-" "[<-" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"signPerm" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Arith.Csparse" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Diagonal" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".findMethodInTable" ".quickCoerceSelect" "as" "isTRUE" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "-" "eval" "eval" "callGeneric" "-" "-" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"getGeneric" "as" ".nextMethod" "callNextMethod" ".local" "initialize" "initialize" "new" "asMethod" "as" "standardGeneric" "all.equal" "isTRUE" ".a.e.comb" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"sys.parent" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" ".class1" "as" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "lu" "lu" "Matrix::determinant" "Matrix::determinant" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "asMethod" "as" "Matrix::Matrix" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fn" "<Anonymous>" "minqa::bobyqa" "fit" "spsurml" 
".getClassesFromCache" "getClassDef" "is" "slotNames" "attrSlotNames" "lapply" "sapply" "attrSlots" "standardGeneric" "all.equal" "attr.all_Mat" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" ".local" "solve" "standardGeneric" "solve" "solve" "standardGeneric" "solve" "eval" "eval" "callGeneric" "Matrix::solve" "standardGeneric" "Matrix::solve" "Matrix::crossprod" "standardGeneric" "Matrix::solve" "fit" "spsurml" 
"anyDuplicated" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "Matrix::Matrix" "cov_fit" "spsurml" 
"as" "validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "diag2Tsmart" "eval" "eval" "callGeneric" "-" "-" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".dense2C" ".class1" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "asMethod" "as" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"isTriangular" "isTriangular" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"isTriangular" "isTriangular" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"isTriangular" "isTriangular" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"isTriangular" "isTriangular" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"isTriangular" "isTriangular" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"isTriangular" "isTriangular" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"isTriangular" "isTriangular" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"isTriangular" "isTriangular" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"isTriangular" "isTriangular" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"methods:::loadMethod" "initialize" "new" "tT2gT" "asMethod" "as" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"%*%" "as.vector" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"%*%" "as.vector" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"%*%" "as.vector" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"%*%" "as.vector" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"%*%" "as.vector" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"as.vector" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "eval" "eval" "callGeneric" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".findInheritedMethods" "<Anonymous>" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"length" "length" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".a.e.comb" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
".T.2.C" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"is" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "kronecker" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"asMethod" "as" ".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" ".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" ".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"paste" "outerLabels" ".findInheritedMethods" "<Anonymous>" "[<-" "cov_fit" "spsurml" 
"paste" "outerLabels" ".findInheritedMethods" "<Anonymous>" "[<-" "eval" "eval" "callGeneric" "[<-" "[<-" "cov_fit" "spsurml" 
"solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"paste" "outerLabels" ".findInheritedMethods" "<Anonymous>" "[<-" "cov_fit" "spsurml" 
"paste" "outerLabels" ".findInheritedMethods" "<Anonymous>" "[<-" "eval" "eval" "callGeneric" "[<-" "[<-" "cov_fit" "spsurml" 
"asMethod" "as" ".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" ".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" ".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"as.vector" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"possibleExtends" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"get" ":::" "initialize" "new" ".diag2tT" "asMethod" "as" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"asMethod" "as" ".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" ".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" ".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".solve.dgC" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "solve" "standardGeneric" "solve" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"%*%" "%*%" "%*%" "%*%" "%*%" "%*%" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"array" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"t.default" "t" "standardGeneric" "t" "as.vector" "Matrix::t" "standardGeneric" "Matrix::t" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "cov_fit" "spsurml" 
"sum" "eval" "eval" "callGeneric" "sum" "sum" "sum" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"%in%" ".getGroupMethods" ".findInheritedMethods" "<Anonymous>" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"is.na" "all.equal.numeric" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".a.e.comb" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"diag" "standardGeneric" "diag" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
".Call" ".local" "Matrix::solve" "standardGeneric" "Matrix::solve" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".getClassesFromCache" "getClassDef" ".nextMethod" "callNextMethod" ".local" "initialize" "initialize" "new" "asMethod" "as" "replCmat4" "[<-" "[<-" "cov_fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" ".local" "initialize" "initialize" "new" "asMethod" "as" "replCmat4" "[<-" "[<-" "cov_fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" ".local" "initialize" "initialize" "new" "asMethod" "as" "standardGeneric" "all.equal" "isTRUE" ".a.e.comb" ".local" "all.equal" "standardGeneric" "all.equal" "isTRUE" ".local" "isSymmetric" "standardGeneric" "isSymmetric" "Matrix::Matrix" "cov_fit" "spsurml" 
"validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "is" "Matrix::Matrix" "cov_fit" "spsurml" 
"indTri" "isN0" "nz.NA" "nnzero" "nnzero" "+" "+" "+" "eval" "eval" "callGeneric" "+" "+" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "kronecker" "kronecker" "kronecker" "kronecker" "methods::kronecker" "methods::kronecker" "kronecker" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"asMethod" "as" "as_dense" "asMethod" "as" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"*" "eval" "eval" "callGeneric" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "*" "*" "*" "eval" "eval" "callGeneric" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"is.na" "isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"isN0" "nz.NA" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
"sum" "nnzero" "nnzero" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
".dense2C" "asMethod" "as" "asMethod" "as" "*" "*" "cov_fit" "spsurml" 
"sys.function" "formals" "match.arg" "format.default" "format" "format.pval" "printCoefmat" "print.summary.spsur" "<Anonymous>" 
